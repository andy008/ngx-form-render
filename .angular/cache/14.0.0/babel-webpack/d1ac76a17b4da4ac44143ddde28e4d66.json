{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\n\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\n\nfunction TextboxComponent_input_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"input\", 4);\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"is-invalid\", ctx_r0.isDirty && !ctx_r0.isValid);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(8, _c0, ctx_r0.isTouched && ctx_r0.isErrors))(\"id\", ctx_r0.field.name)(\"name\", ctx_r0.field.name)(\"formControlName\", ctx_r0.field.name)(\"placeholder\", ctx_r0.field.placeholder);\n    i0.ɵɵattribute(\"type\", ctx_r0.field.type);\n  }\n}\n\nfunction TextboxComponent_textarea_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"textarea\", 5);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"is-invalid\", ctx_r1.isDirty && !ctx_r1.isValid);\n    i0.ɵɵpropertyInterpolate(\"rows\", ctx_r1.field.lines);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(8, _c0, ctx_r1.isTouched && ctx_r1.isErrors))(\"id\", ctx_r1.field.name)(\"name\", ctx_r1.field.name)(\"formControlName\", ctx_r1.field.name)(\"placeholder\", ctx_r1.field.placeholder);\n  }\n}\n\nfunction TextboxComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.field.validationMessage, \" \");\n  }\n}\n\nexport let TextboxComponent = /*#__PURE__*/(() => {\n  class TextboxComponent {\n    constructor() {\n      this.field = {};\n    }\n\n    get isValid() {\n      return this.form.controls[this.field.name].valid;\n    }\n\n    get isDirty() {\n      return this.form.controls[this.field.name].dirty;\n    }\n\n    get isTouched() {\n      return this.form.controls[this.field.name].touched;\n    }\n\n    get isErrors() {\n      return this.form.controls[this.field.name].errors;\n    }\n\n    ngOnInit() {}\n\n  }\n\n  TextboxComponent.ɵfac = function TextboxComponent_Factory(t) {\n    return new (t || TextboxComponent)();\n  };\n\n  TextboxComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TextboxComponent,\n    selectors: [[\"lib-textbox\"]],\n    inputs: {\n      field: \"field\",\n      form: \"form\"\n    },\n    decls: 4,\n    vars: 4,\n    consts: [[3, \"formGroup\"], [\"class\", \"form-control\", 3, \"is-invalid\", \"ngClass\", \"id\", \"name\", \"formControlName\", \"placeholder\", 4, \"ngIf\"], [\"class\", \"form-control\", 3, \"is-invalid\", \"ngClass\", \"id\", \"name\", \"formControlName\", \"rows\", \"placeholder\", 4, \"ngIf\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [1, \"form-control\", 3, \"ngClass\", \"id\", \"name\", \"formControlName\", \"placeholder\"], [1, \"form-control\", 3, \"ngClass\", \"id\", \"name\", \"formControlName\", \"rows\", \"placeholder\"], [1, \"invalid-feedback\"]],\n    template: function TextboxComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, TextboxComponent_input_1_Template, 1, 10, \"input\", 1);\n        i0.ɵɵtemplate(2, TextboxComponent_textarea_2_Template, 1, 10, \"textarea\", 2);\n        i0.ɵɵtemplate(3, TextboxComponent_div_3_Template, 2, 1, \"div\", 3);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.field.multiline);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.field.multiline);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.field.validationMessage);\n      }\n    },\n    dependencies: [i1.NgClass, i1.NgIf, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName]\n  });\n  return TextboxComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}