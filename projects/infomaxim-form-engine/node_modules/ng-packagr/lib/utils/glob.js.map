{"version":3,"file":"glob.js","sourceRoot":"","sources":["../../../src/lib/utils/glob.ts"],"names":[],"mappings":";;;AAAA,6BAA6B;AAC7B,+BAAiC;AACjC,mCAA2C;AAE3C,MAAM,WAAW,GAAG,gBAAS,CAAC,IAAI,CAAC,CAAC;AAE7B,KAAK,UAAU,SAAS,CAAC,OAA0B,EAAE,OAAuB;IACjF,MAAM,KAAK,GAAG,MAAM,OAAO,CAAC,GAAG,CAAW,eAAO,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC;IAE9F,OAAO,eAAO,CAAC,KAAK,CAAC,CAAC;AACxB,CAAC;AAJD,8BAIC","sourcesContent":["import * as glob from 'glob';\nimport { promisify } from 'util';\nimport { flatten, toArray } from './array';\n\nconst globPromise = promisify(glob);\n\nexport async function globFiles(pattern: string | string[], options?: glob.IOptions): Promise<string[]> {\n  const files = await Promise.all<string[]>(toArray(pattern).map(p => globPromise(p, options)));\n\n  return flatten(files);\n}\n"]}