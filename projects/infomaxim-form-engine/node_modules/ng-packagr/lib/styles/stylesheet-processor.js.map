{"version":3,"file":"stylesheet-processor.js","sourceRoot":"","sources":["../../../src/lib/styles/stylesheet-processor.ts"],"names":[],"mappings":";;;AAAA,6CAA6C;AAC7C,+BAA4B;AAC5B,gCAAgC;AAEhC,oCAAoC;AAEpC,IAAY,MAGX;AAHD,WAAY,MAAM;IAChB,2BAAiB,CAAA;IACjB,uBAAa,CAAA;AACf,CAAC,EAHW,MAAM,GAAN,cAAM,KAAN,cAAM,QAGjB;AAcD,MAAa,mBAAmB;IAO9B,YAAqB,QAAgB,EAAW,MAAe,EAAW,iBAA4B;QAAjF,aAAQ,GAAR,QAAQ,CAAQ;QAAW,WAAM,GAAN,MAAM,CAAS;QAAW,sBAAiB,GAAjB,iBAAiB,CAAW;QALrF,8BAAyB,GAA6C,GAAG,CACxF,WAAI,CAAC,SAAS,EAAE,kCAAkC,CAAC,EACnD,mBAAmB,CAAC,IAAI,CACzB,CAAC;QAGA,GAAG,CAAC,KAAK,CAAC,8BAA8B,QAAQ,EAAE,CAAC,CAAC;QACpD,IAAI,CAAC,gBAAgB,GAAG,YAAY,CAAC,SAAS,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,CAAC;IACtE,CAAC;IAED,OAAO,CAAC,QAAgB;QACtB,MAAM,aAAa,GAAkB;YACnC,QAAQ;YACR,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,MAAM,EAAE,IAAI,CAAC,MAAM;YACnB,iBAAiB,EAAE,IAAI,CAAC,iBAAiB;YACzC,gBAAgB,EAAE,IAAI,CAAC,gBAAgB;SACxC,CAAC;QAEF,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAC,yBAAyB,CAAC,aAAa,CAAC,CAAC;QAExE,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;QAEvC,OAAO,GAAG,CAAC;IACb,CAAC;CACF;AA3BD,kDA2BC","sourcesContent":["import * as browserslist from 'browserslist';\nimport { join } from 'path';\nimport * as rpc from 'sync-rpc';\n\nimport * as log from '../utils/log';\n\nexport enum CssUrl {\n  inline = 'inline',\n  none = 'none',\n}\nexport interface WorkerOptions {\n  filePath: string;\n  basePath: string;\n  browserslistData: string[];\n  cssUrl?: CssUrl;\n  styleIncludePaths?: string[];\n}\n\nexport interface WorkerResult {\n  css: string;\n  warnings: string[];\n}\n\nexport class StylesheetProcessor {\n  private readonly browserslistData: string[];\n  private readonly styleSheetProcessorWorker: (options: WorkerOptions) => WorkerResult = rpc(\n    join(__dirname, './stylesheet-processor-worker.js'),\n    StylesheetProcessor.name\n  );\n\n  constructor(readonly basePath: string, readonly cssUrl?: CssUrl, readonly styleIncludePaths?: string[]) {\n    log.debug(`determine browserslist for ${basePath}`);\n    this.browserslistData = browserslist(undefined, { path: basePath });\n  }\n\n  process(filePath: string) {\n    const workerOptions: WorkerOptions = {\n      filePath,\n      basePath: this.basePath,\n      cssUrl: this.cssUrl,\n      styleIncludePaths: this.styleIncludePaths,\n      browserslistData: this.browserslistData,\n    };\n\n    const { css, warnings } = this.styleSheetProcessorWorker(workerOptions);\n\n    warnings.forEach(msg => log.warn(msg));\n\n    return css;\n  }\n}\n"]}